# Generated by Django 5.1.5 on 2025-01-24 16:00

import django.contrib.auth.models
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contratante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_factura', models.CharField(default='general', max_length=100)),
                ('contratante', models.CharField(max_length=255)),
                ('mes_atrasado', models.CharField(blank=True, max_length=50, null=True)),
                ('mes_actual', models.CharField(blank=True, max_length=50, null=True)),
                ('precio_mes_actual', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('precio_mes_atrasado', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('plan_contratado_mes_atrasado', models.CharField(blank=True, max_length=255, null=True)),
                ('plan_contratado_mes_actual', models.CharField(blank=True, max_length=255, null=True)),
                ('deuda', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('dane', models.CharField(blank=True, max_length=50, null=True)),
                ('fecha_instalacion', models.CharField(blank=True, max_length=255, null=True)),
                ('total', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('nit_o_cc', models.CharField(max_length=50, unique=True)),
                ('direccion', models.CharField(blank=True, max_length=255, null=True)),
                ('municipio', models.CharField(blank=True, max_length=100, null=True)),
                ('telefono', models.CharField(blank=True, max_length=20, null=True)),
                ('correo', models.EmailField(blank=True, max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cedula', models.CharField(max_length=20, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('access', models.CharField(choices=[('admin', 'Administrador'), ('editor', 'Editor'), ('user', 'Usuario')], default='user', max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
